<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org//4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org//4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.zimidy</groupId>
    <artifactId>api</artifactId>
    <version>1.0-SNAPSHOT</version>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.0.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ss'Z'</maven.build.timestamp.format>
        <build-timestamp>${maven.build.timestamp}</build-timestamp>

        <project>zimidy</project>
        <module>api</module>

        <java.version>1.8</java.version>
        <kotlin.version>1.2.30</kotlin.version>
        <kotlin.compiler.incremental>true</kotlin.compiler.incremental>
        <graphql-spring-boot.version>4.0.0.M1</graphql-spring-boot.version>
    </properties>

    <repositories>
        <repository>
            <id>spring-milestone</id>
            <name>Spring Milestone Repository</name>
            <url>https://repo.spring.io/libs-milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>spring-milestone</id>
            <name>Spring Milestone Repository</name>
            <url>https://repo.spring.io/libs-milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-neo4j</artifactId>
        </dependency>

        <dependency>
            <groupId>org.neo4j</groupId>
            <artifactId>neo4j-ogm-bolt-driver</artifactId>
            <version>${neo4j-ogm.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>


        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>0.9.0</version>
        </dependency>

        <dependency>
            <groupId>com.plivo</groupId>
            <artifactId>plivo-java</artifactId>
            <version>3.0.8</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.10</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.apis</groupId>
            <artifactId>google-api-services-storage</artifactId>
            <version>v1-rev65-1.21.0</version>
        </dependency>
        <!--
        GraphQL Spring Boot (https://github.com/graphql-java/graphql-spring-boot) depends on:
        - GraphQL Java (https://github.com/graphql-java/graphql-java)
        - GraphQL Java Servlet (https://github.com/graphql-java/graphql-java-servlet)
        -->
        <dependency>
            <groupId>com.graphql-java</groupId>
            <artifactId>graphql-spring-boot-starter</artifactId>
            <version>${graphql-spring-boot.version}</version>
        </dependency>
        <!-- GraphQL Java Tools (https://github.com/graphql-java/graphql-java-tools) -->
        <dependency>
            <groupId>com.graphql-java</groupId>
            <artifactId>graphql-java-tools</artifactId>
            <version>4.3.0</version>
        </dependency>
        <!-- Social Login -->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-jose</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>5.0.2.RELEASE</version>
        </dependency>


        <!-- Social Login end-->
        <!--
        todo: Due to dependency conflict (https://github.com/neo4j/neo4j/issues/10238) we can't use Neo4j Harness
        > Neo4j Harness is a utility that allows for starting a lightweight Neo4j instance.
        > It is used to start Neo4j with a specific procedure deployed, which greatly simplifies testing.
        As soon as the issue 10238 will be solved, we should leverage Harness to test against an embedded Neo4j db:
        testCompile 'org.neo4j.test:neo4j-harness:3.2.6'
        Until that, we will test against a dedicated remote Neo4j db
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>src/main/kotlin</sourceDirectory>
        <testSourceDirectory>src/test/kotlin</testSourceDirectory>
        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <includes>
                    <include>**</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>it.ozimov</groupId>
                <artifactId>yaml-properties-maven-plugin</artifactId>
                <version>1.1.3</version>
                <configuration>
                    <properties/>
                    <outputFile>${project.build.directory}/module.properties</outputFile>
                </configuration>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <files>
                                <file>properties/commit.yml</file>
                                <file>properties/default.properties.yml</file>
                                <file>properties/-/${env}.properties.yml</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.8</version>
                <executions>
                    <execution>
                        <!-- This execution copies system scoped JARs to WAR file
                        (based on: https://stackoverflow.com/a/24434659/8851061) -->
                        <id>copy-system-scoped-dependencies-to-war</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/lib
                            </outputDirectory>
                            <includeScope>system</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <configuration>
                    <compilerPlugins>
                        <plugin>spring</plugin>
                    </compilerPlugins>
                    <jvmTarget>1.8</jvmTarget>
                </configuration>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <delimiters>@{*}</delimiters>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>jar</nonFilteredFileExtension>
                        <nonFilteredFileExtension>so</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
                <executions>
                    <execution>
                        <id>copy-docker-artifact</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>target</directory>
                                    <includes>
                                        <include>${project.build.finalName}.jar</include>
                                    </includes>
                                </resource>
                            </resources>
                            <outputDirectory>${basedir}/target/docker/context</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-docker-resources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>docker</directory>
                                    <includes>
                                        <include>**</include>
                                    </includes>
                                    <excludes>
                                        <exclude>-/</exclude>
                                    </excludes>
                                    <filtering>true</filtering>
                                </resource>
                                <resource>
                                    <directory>docker/-/${env}</directory>
                                    <includes>
                                        <include>**</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <outputDirectory>${basedir}/target/docker</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>ktlint</id>
                        <phase>verify</phase>
                        <configuration>
                            <target name="ktlint">
                                <java taskname="ktlint"
                                      dir="${basedir}"
                                      fork="true"
                                      failonerror="true"
                                      classpathref="maven.plugin.classpath"
                                      classname="com.github.shyiko.ktlint.Main"
                                >
                                    <arg value="src/**/*.kt"/>
                                    <arg value="--reporter=plain?group_by_file"/>
                                    <arg value="--reporter=plain?group_by_file,output=${project.build.directory}/ktlint-report.txt"/>
                                    <arg value="--verbose"/>
                                </java>
                            </target>
                        </configuration>
                        <goals><goal>run</goal></goals>
                    </execution>
                    <execution>
                        <id>ktlint-format</id>
                        <configuration>
                            <target name="ktlint">
                                <java taskname="ktlint"
                                      dir="${basedir}"
                                      fork="true"
                                      failonerror="true"
                                      classpathref="maven.plugin.classpath"
                                      classname="com.github.shyiko.ktlint.Main"
                                >
                                    <arg value="-F"/>
                                    <arg value="src/**/*.kt"/>
                                    <arg value="--reporter=plain?group_by_file"/>
                                    <arg value="--reporter=plain?group_by_file,output=${project.build.directory}/ktlint-report.txt"/>
                                    <arg value="--verbose"/>
                                </java>
                            </target>
                        </configuration>
                        <goals><goal>run</goal></goals>
                    </execution>
                    <execution>
                        <id>ktlint-apply-to-idea-projectktlint-apply-to-idea-project</id>
                        <configuration>
                            <target name="ktlint">
                                <java taskname="ktlint"
                                      dir="${basedir}"
                                      fork="true"
                                      failonerror="true"
                                      classpathref="maven.plugin.classpath"
                                      classname="com.github.shyiko.ktlint.Main"
                                >
                                    <arg value="--apply-to-idea-project"/>
                                </java>
                            </target>
                        </configuration>
                        <goals><goal>run</goal></goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.github.shyiko</groupId>
                        <artifactId>ktlint</artifactId>
                        <version>0.23.1</version>
                    </dependency>
                     <!--additional 3rd party rule-set(s) can be specified here-->
                </dependencies>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <env>dev</env>
            </properties>
        </profile>
        <profile>
            <id>staging</id>
            <properties>
                <env>staging</env>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <env>prod</env>
            </properties>
        </profile>
        <profile>
            <id>exp</id>
            <properties>
                <env>exp</env>
            </properties>
        </profile>
    </profiles>

</project>
